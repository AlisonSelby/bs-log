steps:
  - task: NodeTool@0
    displayName: "Use Node 8.x"
    inputs:
      versionSpec: 8.x

  - task: DownloadBuildArtifacts@0
    displayName: "Download Linux Artifacts"
    inputs:
      artifactName: Linux
      downloadPath: "_release"

  - script: "mkdir -p _release/bin/platform-linux"
    displayName: "Create _release/bin/platform-linux"

  - script: "mv _release/Linux/logppx.native _release/bin/platform-linux/logppx.native"
    displayName: "mv Linux"

  - task: DownloadBuildArtifacts@0
    displayName: "Download macOS Artifacts"
    inputs:
      artifactName: macOS
      downloadPath: "_release"

  - script: "mkdir -p _release/bin/platform-darwin"
    displayName: "Create _release/bin/platform-darwin"

  - script: "mv _release/macOS/logppx.native _release/bin/platform-darwin/logppx.native"
    displayName: "mv macOS"

  - task: DownloadBuildArtifacts@0
    displayName: "Download Windows Artifacts"
    inputs:
      artifactName: Windows
      downloadPath: "_release"

  - script: "mkdir -p _release/bin/platform-windows-x64"
    displayName: "Create _release/bin/platform-windows-x64"

  - script: "mv _release/Windows/logppx.native.exe _release/bin/platform-windows-x64/logppx.native.exe"
    displayName: "mv Windows"

  - script: |
      mkdir -p _release/src
      cp README.md _release/README.md
      cp package.json _release/package.json
      cp bs-log/bsconfig.json _release/bsconfig.json
      cp bs-log/src/Log.re _release/src/Log.re
      cp .ci/script/postinstall.js _release/postinstall.js
    displayName: "Copy needed files"

  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifact: Release"
    inputs:
      PathtoPublish: "_release"
      ArtifactName: Release
